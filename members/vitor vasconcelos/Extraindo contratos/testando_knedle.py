# -*- coding: utf-8 -*-
"""testando Knedle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fTzvlTQc7zxLIeT5Dia_EM_fs9CGt1zx
"""

pip install python-docx

import docx

import glob
import re
import pandas as pd
#from yattag import Doc
import unicodedata
import json
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
import math
import seaborn as sns

def getText(filename):
    doc = docx.Document(filename)
    fullText = []
    for para in doc.paragraphs:
        fullText.append(para.text)
    return fullText

texto = getText('dodf43-62.docx')
for txt in texto:
  print(txt)

regex_contrato = 'EXTRATO DO CONTRATO ([^.]*)'
df_dict=[]

# txt=str(txt).strip('[]')

for txt in texto:
  #print(txt)
  match = re.search(regex_contrato, txt, re.IGNORECASE)
  if match:
      df_dict.append(match.group(0))
  else:
      df_dict.append(np.nan)
    
print(df_dict)

regex_dict={
    'contrato': 'EXTRATO DO CONTRATO ([^.]*)', # Numero do ajuste
    'partes':'Partes: ([^.]*)', # Orgao contratante/ entidade contratada
    # Entidade convenetes???
    'processo': 'Processo[\s\S]*(\d{3}.\d{3}/\d{4}?)' , # Processo no GDF
    #'processo': 'Processo[\s\S]*(\d{3}.\d{6}/\d{4}?)|(\d{5}[\.|\-]\d{8}\/\d{4}-\d{2})|(\d{5}[\.|\-]\d{8}\/\d{4}-\d{2})', # Processo no GDF
    'objeto':'Objeto: ([^.]*)', # Objeto do ajuste
    'data_ass': 'Data da Assinatura:[\s\S](\d{2}/\d{2}/\d{2}?)', # Data
    'vigencia':'Vigência[\s\S]([^,]*)([^,]*)', # Vigencia do ajuste
    'valor': 'Valor: ([^(]*)', # Valor do ajuste
    'uni_orc':'Unidade Orçamentária:[\s\S]([^;]*)', # Dotacao orcamenteria com: Unidade Orçamentária
    'prog_trab':'Programa de Trabalho:[\s\S]([^;]*)',# Programa de Trabalho
    'nat_desp':'Natureza da Despesa:[\s\S]([^;]*)', # Natureza da Despesa
    'nota_emp':'Nota de Empenho: ([^;]*)', #Nota de Empenho (as vezes nao tem)

}

df_dict={
    'contrato':[],
    'partes':[],
    'processo':[],
    'data_ass':[],
    'objeto':[],
    'vigencia':[],
    'valor':[],
    'uni_orc':[],
    'prog_trab':[],
    'nat_desp':[],
    'nota_emp':[],
    
}


for txt in texto:
  for field in regex_dict:
    match = re.search(regex_dict[field], txt, re.IGNORECASE)
    if match:
        res = tuple(x for x in match.groups() if x is not None) #pega sem as palavras usadas como parametros de extraçao 
        df_dict[field].append(res[0])
        # df_dict[field].append(match.group(0)) #pega com as palavras usadas como parametros de extraçao junto
    else:
        df_dict[field].append(np.nan)    
    
for field in df_dict:
  print(field, "->", df_dict[field])  


df = pd.DataFrame.from_dict(df_dict)
df.to_csv('abertura_regex.csv')
df